{"version":3,"sources":["api.ts","constants/Cart.tsx","actions/Cart.tsx","components/MessageBox.tsx","views/CartPage.tsx","components/Rating.tsx","components/Product.tsx","components/LoadingBox.tsx","constants/Product.tsx","views/HomePage.tsx","actions/Product.tsx","views/ProductPage.tsx","App.tsx","reportWebVitals.ts","store.tsx","reducers/Product.tsx","reducers/Cart.tsx","index.tsx"],"names":["request","axios","create","baseURL","productDeail","productId","get","cartDeail","CART_ADD_ITEM","addToCart","qty","dispatch","getState","a","data","type","payload","name","image","price","countInStock","_id","localStorage","setItem","JSON","stringify","cart","cartItems","MessageBox","props","className","variant","children","CartPage","match","useDispatch","location","useLocation","proudctId","params","id","Number","search","split","useSelector","state","useEffect","to","map","item","src","process","alt","value","onChange","e","target","Array","keys","x","onClick","product","console","log","reduce","c","disabled","length","Rating","val","rating","numReviews","Product","LoadingBox","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAIL_REQUEST","PRODUCT_DETAIL_SUCCESS","PRODUCT_DETAIL_FAIL","HomePage","proudctList","loading","error","products","message","ProductPage","productDetail","useState","setQty","history","useHistory","response","description","push","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getItem","tempCartItem","parse","initialState","reducer","combineReducers","action","existItem","find","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAGMA,E,OAAUC,EAAMC,OAAO,CAC3BC,QAEE,iDAISC,EAAe,SAACC,GAAD,OAAuBL,EAAQM,IAAR,uBAAyCD,KAE/EE,EAAY,SAACF,GAAD,OAAuBL,EAAQM,IAAR,uBAAyCD,KCZ5EG,EAAgB,gBCKhBC,EAAY,SAACJ,EAAmBK,GAApB,8CAAoC,WAAOC,EAAeC,GAAtB,iBAAAC,EAAA,sEAClCN,EAAUF,GADwB,gBACjDS,EADiD,EACjDA,KAERH,EAAS,CACLI,KAAMP,EACNQ,QAAS,CACLC,KAAMH,EAAKG,KACXC,MAAOJ,EAAKI,MACZC,MAAOL,EAAKK,MACZC,aAAcN,EAAKM,aACnBf,UAAWS,EAAKO,IAChBX,SAGRY,aAAaC,QAAQ,YAAYC,KAAKC,UAAUb,IAAWc,KAAKC,YAdP,2CAApC,yD,OCHV,SAASC,EAAWC,GAC/B,OACI,qBAAKC,UAAS,sBAAiBD,EAAME,SAAW,QAAhD,SACKF,EAAMG,WCKJ,SAASC,EAAT,GAA8D,IAA1CC,EAAyC,EAAzCA,MACzBvB,EAAWwB,cACXC,EAAWC,cACXC,EAAYJ,EAAMK,OAAOC,GACzB9B,EAAM+B,OAAOL,EAASM,OAAOC,MAAM,KAAK,IAEtChB,EADKiB,aAAY,SAACC,GAAD,OAAgBA,EAAMnB,QACvCC,UACRmB,qBAAU,WACFR,GACA3B,EAASF,EAAU6B,EAAW5B,MAEnC,CAACC,EAAUD,EAAK4B,IAQnB,OAGI,sBAAKR,UAAU,UAAf,UACI,sBAAKA,UAAU,QAAf,UACI,+CACe,IAAdH,EACG,eAACC,EAAD,CAAYG,QAAQ,OAApB,4BACA,cAAC,IAAD,CAAMgB,GAAG,IAAT,4BAEI,6BAEQpB,EAAUqB,KAAI,SAACC,GACX,OACI,6BACI,sBAAKnB,UAAU,MAAf,UACI,8BACI,qBAAKoB,IAAKC,oBAAyBF,EAAK/B,MAAOkC,IAAKH,EAAKhC,KAAMa,UAAU,YAG7E,qBAAKA,UAAU,SAAf,SACI,cAAC,IAAD,CAAMiB,GAAE,mBAAcE,EAAK5C,WAA3B,SAAyC4C,EAAKhC,SAElD,8BACI,wBAAQA,KAAK,GAAGoC,MAAOJ,EAAKvC,IACxB4C,SAAU,SAAAC,GAAC,OAAI5C,EAASF,EAAUwC,EAAK5C,UAAWoC,OAAOc,EAAEC,OAAOH,UADtE,SAEK,YAAII,MAAMR,EAAK7B,cAAcsC,QAAQV,KAAI,SAACW,GAAD,OACrC,wBAAoBN,MAAOM,EAAI,EAA/B,SAAmCA,EAAI,GAA1BA,EAAI,UAI9B,oCACMV,EAAK9B,SAEX,8BACI,wBAAQJ,KAAK,SAAS6C,QAAS,kBAzCvDpB,EAyC4ES,EAAKY,aAxCrGC,QAAQC,IAAIvB,GADO,IAACA,GAyCwB,0BArBHS,EAAKY,iBA8B1C,qBAAK/B,UAAU,QAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,+BACI,6BACI,4CACeH,EAAUqC,QAAO,SAACnD,EAAQoD,GAAT,OAAoBpD,EAAI4B,OAAOwB,EAAEvD,OAAM,GADvE,QAEEiB,EAAUqC,QAAO,SAACnD,EAAQoD,GAAT,OAAoBpD,EAAIoD,EAAE9C,MAAQ8C,EAAEvD,MAAK,QAGhE,6BACI,wBAAQK,KAAK,SAAS6C,QAzDtB,SAACpB,GACrBsB,QAAQC,IAAIvB,IAwDwDV,UAAU,gBACtDoC,SAA+B,IAArBvC,EAAUwC,OADxB,+CCnF5B,IAuBeC,EAvBA,SAACvC,GAEZ,OACI,sBAAKC,UAAU,SAAf,UAFY,CAAC,EAAG,EAAG,EAAG,EAAG,GAITkB,KAAI,SAACqB,GACT,OACI,+BAAgB,mBAAGvC,UACfD,EAAMyC,QAAUD,EACV,aACAxC,EAAMyC,QAAUD,EAAM,GAClB,oBACA,kBALHA,MAUvB,iCACKxC,EAAM0C,WADX,kBCKGC,MAnBf,SAAiB3C,GAAkC,IAAD,EACxCgC,EAAO,UAAGhC,EAAMgC,eAAT,QAAoB,GACjC,OACI,sBAAuB/B,UAAU,OAAjC,UACI,cAAC,IAAD,CAAMiB,GAAI,YAAcc,EAAQxC,IAAhC,SACI,qBAAKS,UAAU,SAASoB,IAAKC,oBAAyBU,EAAQ3C,MAAOkC,IAAKS,EAAQ5C,SAEtF,sBAAKa,UAAU,YAAf,UACI,cAAC,IAAD,CAAMiB,GAAI,YAAcc,EAAQxC,IAAhC,SACI,6BAAKwC,EAAQ5C,SAEjB,cAAC,EAAD,CAAQqD,OAAQT,EAAQS,OAAQC,WAAYV,EAAQU,gBAExD,sBAAKzC,UAAU,QAAf,eACO+B,EAAQ1C,WAXT0C,EAAQxC,MCJX,SAASoD,IACpB,OACI,sBAAK3C,UAAU,QAAf,UACI,mBAAGA,UAAU,sCACb,sBAAMA,UAAU,UAAhB,2BCNL,IAAM4C,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAGpBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBCEpB,SAASC,IACpB,IAAMrE,EAAWwB,cACX8C,EAAcrC,aAAY,SAACC,GAAD,OAAgBA,EAAMoC,eAC9CC,EAA6BD,EAA7BC,QAASC,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,SAMxB,OAJAtC,qBAAU,WACNnC,ECLoB,uCAAM,WAAOA,GAAP,iBAAAE,EAAA,6DAC9BF,EAAS,CACLI,KAAM2D,IAFoB,kBVDD1E,EAAQM,IAAmB,iBUC1B,gBAKlBQ,EALkB,EAKlBA,KACRH,EAAS,CAAEI,KAAM4D,EAAsB3D,QAASF,IANtB,gDAQ1BH,EAAS,CAAEI,KAAM6D,EAAmB5D,QAAS,KAAMqE,UARzB,yDAAN,yDDMrB,CAAC1E,IAGA,8BAEQuE,EACI,qBAAKpD,UAAU,aAAf,SACI,cAAC2C,EAAD,MAGJU,EACI,cAACvD,EAAD,CAAYG,QAAQ,SAApB,SAA+BoD,IAE/B,qBAAKrD,UAAU,aAAf,gBAEQsD,QAFR,IAEQA,OAFR,EAEQA,EAAUpC,KAAI,SAACa,GACX,OACI,cAAC,EAAD,CAA2BA,QAASA,GAAtBA,EAAQxC,Y,YEnB/C,SAASiE,EAAT,GAAiE,IAA1CpD,EAAyC,EAAzCA,MAE5BvB,EAAWwB,cACjB,EAAoCS,aAAY,SAACC,GAAD,OAAgBA,EAAM0C,iBAA9DL,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOtB,EAAxB,EAAwBA,QACxB,EAAsB2B,mBAAS,GAA/B,mBAAO9E,EAAP,KAAY+E,EAAZ,KACMC,EAAUC,cAChB7C,qBAAU,cAEP,CAACnC,IAEJmC,qBAAU,WDHe,IAACzC,ECItBM,GDJsBN,ECIC6B,EAAMK,OAAOC,GDJf,uCAAuB,WAAO7B,GAAP,iBAAAE,EAAA,6DAChDF,EAAS,CACLI,KAAM8D,IAFsC,kBAKrBzE,EAAaC,GALQ,gBAKpCS,EALoC,EAKpCA,KACRH,EAAS,CAAEI,KAAM+D,EAAwB9D,QAASF,IANN,gDAQ5CH,EAAS,CAAEI,KAAMgE,EAAqB/D,QAAS,KAAM4E,UAC9C,KAAMA,SAAS9E,KAAKuE,QACpB,KAAMO,SAAS9E,KAAKuE,QACpB,KAAMA,UAX+B,yDAAvB,0DCMtB,CAAC1E,EAAUuB,EAAMK,OAAOC,KAM3B,OACI0C,EACI,cAACT,EAAD,IACAU,EACI,cAACvD,EAAD,CAAYG,QAAQ,SAApB,SAA+BoD,IAG/B,gCACI,cAAC,IAAD,CAAMpC,GAAG,IAAT,4BACA,sBAAKjB,UAAU,UAAf,UACI,qBAAKA,UAAU,QAAf,SACI,qBAAKA,UAAU,QAAQoB,IAAKC,qBAAA,OAAyBU,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAS3C,OAAOkC,IAAI,OAE7E,qBAAKtB,UAAU,QAAf,SACI,+BACI,6BACI,oCAAK+B,QAAL,IAAKA,OAAL,EAAKA,EAAS5C,SAElB,6BACI,cAAC,EAAD,CAAQqD,OAAQT,EAAQS,OAAQC,WAAYV,EAAQU,eAExD,0CACaV,EAAQ1C,SAErB,6CAEJ,4BAAI0C,EAAQgC,sBAIhB,qBAAK/D,UAAU,QAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,+BACI,6BACI,sBAAKA,UAAU,MAAf,UACI,wCACA,sBAAKA,UAAU,QAAf,cACM+B,EAAQ1C,cAItB,6BACI,sBAAKW,UAAU,MAAf,UACI,yCACA,8BACK+B,EAAQzC,aAAe,EACpB,sBAAMU,UAAU,UAAhB,sBAGA,sBAAMA,UAAU,QAAhB,gCASZ+B,EAAQzC,aAAe,GACnB,qCACI,qBAAIU,UAAU,MAAd,UACI,sCACA,8BACI,wBAAQuB,MAAO3C,EAAK4C,SAAU,SAAAC,GAAC,OAAIkC,EAAOhD,OAAOc,EAAEC,OAAOH,SAA1D,SACK,YAAII,MAAMI,EAAQzC,cAAcsC,QAAQV,KAAI,SAACW,GAAD,OACxC,wBAAoBN,MAAOM,EAAI,EAA/B,SAAmCA,EAAI,GAA1BA,EAAI,aAKlC,6BACI,wBAAQ7B,UAAU,UAAU8B,QA3EnD,WACrB8B,EAAQI,KAAR,gBAAsBjC,EAAQxC,IAA9B,gBAAyCX,KA0EG,2CCxDrCqF,MAtCf,WACE,IACQpE,EADKiB,aAAY,SAACC,GAAD,OAAgBA,EAAMnB,QACvCC,UAGR,OACE,cAAC,IAAD,UACE,sBAAKG,UAAU,iBAAf,UACE,yBAAQA,UAAU,MAAlB,UACE,8BACE,cAAC,IAAD,CAAMA,UAAU,QAAQiB,GAAG,IAA3B,4BAEF,gCACE,eAAC,IAAD,CAAMA,GAAG,QAAT,iBAAsBpB,EAAUwC,OAAS,GACvC,sBAAMrC,UAAU,QAAhB,SAAyBH,EAAUwC,YAErC,cAAC,IAAD,CAAMpB,GAAG,UAAT,2BAGJ,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiD,KAAK,gBAAgBC,UAAWX,IAEvC,cAAC,IAAD,CAAOU,KAAK,YAAYC,UAAWhE,IAEnC,cAAC,IAAD,CAAO+D,KAAK,IAAIC,UAAWjB,SAI/B,wBAAQlD,UAAU,aAAlB,sCCzBOoE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCJRxE,EAAYL,aAAaqF,QAAQ,aAEnCC,EAAe,GACM,kBAAdjF,IACPiF,EAAepF,KAAKqF,MAAMlF,IAG9B,IAAMmF,EAAoB,CACtBpF,KAAM,CACFC,UAAWiF,IAUbG,EAAUC,YAAgB,CAC5B/B,YCvB8B,WAA2D,IAA1DpC,EAAyD,uDAAjD,CAAEuC,SAAU,GAAIF,SAAS,GAAQ+B,EAAgB,uCACxF,OAAQA,EAAOlG,MACX,KAAK2D,EACD,MAAO,CAAEQ,SAAS,GACtB,KAAKP,EAED,MAAO,CAAEO,SAAS,EAAOE,SAAU6B,EAAOjG,SAC9C,KAAK4D,EAED,MAAO,CAAEM,SAAS,EAAOC,MAAO8B,EAAOjG,SAC3C,QACI,OAAO6B,IDaf0C,cCTgC,WAA0D,IAAzD1C,EAAwD,uDAAhD,CAAEgB,QAAS,GAAIqB,SAAS,GAAQ+B,EAAgB,uCACzF,OAAQA,EAAOlG,MACX,KAAK8D,EACD,MAAO,CAAEK,SAAS,GACtB,KAAKJ,EACD,MAAO,CAAEI,SAAS,EAAOrB,QAASoD,EAAOjG,SAC7C,KAAK+D,EACD,MAAO,CAAEG,SAAS,EAAOC,MAAO8B,EAAOjG,SAC3C,QACI,OAAO6B,IDCfnB,KEzBuB,WAA6C,IAA5CmB,EAA2C,uDAAnC,CAAElB,UAAW,IAAMsF,EAAgB,uCAEnE,OAAQA,EAAOlG,MACX,KAAKP,EACD,IAAMyC,EAAOgE,EAAOjG,QACdkG,EAAiBrE,EAAMlB,UAAUwF,MAAK,SAACxD,GAAD,OAAYA,EAAEtD,YAAc4C,EAAK5C,aAC7E,OAAI6G,EACO,2BACArE,GADP,IAEIlB,UAAWkB,EAAMlB,UAAUqB,KAAI,SAACW,GAAD,OAAYA,EAAEtD,YAAc6G,EAAU7G,UAAY4C,EAAOU,OAGrF,2BAAKd,GAAZ,IAAmBlB,UAAU,GAAD,mBAAMkB,EAAMlB,WAAZ,CAAuBsB,MAE3D,QACI,OAAOJ,MFkBbuE,EAAkBC,OAAOC,sCAAwCC,IAIxDC,EAHDC,YAAYV,EAASD,EAAcM,EAAgBM,YAAgBC,OG5BjFC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,IAAMM,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1B9B,M","file":"static/js/main.9ceac2df.chunk.js","sourcesContent":["import axios from 'axios';\nimport { ProductType } from './types/ProductType';\n\nconst request = axios.create({\n  baseURL: process.env.NODE_ENV === 'development' ?\n    'http://localhost:5000/' :\n    'https://arcane-badlands-11766.herokuapp.com/'\n});\n\nexport const productData = () => request.get<ProductType[]>('/api/products');\nexport const productDeail = (productId: string) => request.get<ProductType>(`/api/product/${productId}`);\n\nexport const cartDeail = (productId: string) => request.get<ProductType>(`/api/product/${productId}`);","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\n\n\n\n","\nimport { cartDeail } from \"../api\";\nimport { CART_ADD_ITEM } from \"../constants/Cart\";\n\n\nexport const addToCart = (productId: string, qty: number) => async (dispatch: any, getState: any) => {\n    const { data } = await cartDeail(productId);\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            productId: data._id,\n            qty\n        }\n    })\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems));\n}\n","import React from 'react'\n\nexport default function MessageBox(props: { variant: string, children: React.ReactNode }) {\n    return (\n        <div className={`alert alert-${props.variant || 'info'}`}>       \n            {props.children}\n        </div>\n    )\n}\n","import { useEffect } from 'react'\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addToCart } from '../actions/Cart';\nimport MessageBox from '../components/MessageBox';\ntype RouteInfo = {\n    id: string;\n};\n\nexport default function CartPage({ match }: RouteComponentProps<RouteInfo>) {\n    const dispatch = useDispatch();\n    const location = useLocation();\n    const proudctId = match.params.id;\n    const qty = Number(location.search.split('=')[1]);\n    const cart = useSelector((state: any) => state.cart);\n    const { cartItems } = cart;\n    useEffect(() => {\n        if (proudctId) {\n            dispatch(addToCart(proudctId, qty))\n        }\n    }, [dispatch, qty, proudctId]);\n\n    const removeFromCart = (id: any) => {\n        console.log(id);\n    }\n    const checkoutHandler = (id: any) => {\n        console.log(id);\n    }\n    return (\n\n\n        <div className=\"row top\">\n            <div className=\"col-2\">\n                <h1>Shopping Cart</h1>\n                {cartItems === 0 ?\n                    <MessageBox variant=\"info\"> Cart is empty.\n                    <Link to=\"/\">Go shopping</Link>\n                    </MessageBox> : (\n                        <ul>\n                            {\n                                cartItems.map((item: any) => {\n                                    return (\n                                        <li key={item.product}>\n                                            <div className=\"row\">\n                                                <div>\n                                                    <img src={process.env.PUBLIC_URL + item.image} alt={item.name} className=\"small\" />\n                                                </div>\n\n                                                <div className=\"min-30\">\n                                                    <Link to={`/product/${item.productId}`}>{item.name}</Link>\n                                                </div>\n                                                <div>\n                                                    <select name=\"\" value={item.qty}\n                                                        onChange={e => dispatch(addToCart(item.productId, Number(e.target.value)))}>\n                                                        {[...Array(item.countInStock).keys()].map((x) =>\n                                                            (<option key={x + 1} value={x + 1}>{x + 1}</option>))\n                                                        }\n                                                    </select>\n                                                </div>\n                                                <div>\n                                                    ${item.price}\n                                                </div>\n                                                <div>\n                                                    <button type=\"button\" onClick={() => removeFromCart(item.product)}>Delete</button>\n                                                </div>\n                                            </div>\n                                        </li>)\n                                })\n                            }\n                        </ul>\n                    )}\n            </div>\n            <div className=\"col-1\">\n                <div className=\"card card-body\">\n                    <ul>\n                        <li>\n                            <h2>\n                                Subtotal ({cartItems.reduce((a: any, c: any) => a + Number(c.qty), 0)}) :\n                            ${cartItems.reduce((a: any, c: any) => a + c.price * c.qty, 0)}\n                            </h2>\n                        </li>\n                        <li>\n                            <button type=\"button\" onClick={checkoutHandler} className=\"primary block\"\n                                disabled={cartItems.length === 0}>\n                                Processed to Checkout\n                            </button>\n                        </li>\n\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n","const Rating = (props: { rating: number, numReviews: number }) => {\n    const ratings = [1, 2, 3, 4, 5];\n    return (\n        <div className=\"rating\">\n            {\n                ratings.map((val) => {\n                    return (\n                        <span key={val}><i className={\n                            props.rating >= val\n                                ? 'fa fa-star'\n                                : props.rating >= val - 0.5\n                                    ? 'fa fa-star-half-o'\n                                    : 'fa fa-star-o'}></i>\n                        </span>\n                    );\n                })\n            }\n            <span>\n                {props.numReviews} Reviews\n            </span>\n        </div>\n    )\n}\nexport default Rating;","import Rating from '../components/Rating'\nimport { ProductType } from '../types/ProductType';\nimport { Link } from \"react-router-dom\";\nfunction Product(props: { product: ProductType }) {\n    const product = props.product ?? {};\n    return (\n        <div key={product._id} className=\"card\">\n            <Link to={'/product/' + product._id}>\n                <img className=\"medium\" src={process.env.PUBLIC_URL + product.image} alt={product.name} />\n            </Link>\n            <div className=\"card-body\">\n                <Link to={'/product/' + product._id}>\n                    <h2>{product.name}</h2>\n                </Link>\n                <Rating rating={product.rating} numReviews={product.numReviews} />\n            </div>\n            <div className=\"price\">\n                $ {product.price}\n            </div>\n        </div>\n    )\n}\nexport default Product;","\n\nexport default function LoadingBox() {\n    return (\n        <div className=\"fa-3x\">\n            <i className=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n    )\n}\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\n\n\nexport const PRODUCT_DETAIL_REQUEST = 'PRODUCT_DETAIL_REQUEST';\nexport const PRODUCT_DETAIL_SUCCESS = 'PRODUCT_DETAIL_SUCCESS';\nexport const PRODUCT_DETAIL_FAIL = 'PRODUCT_DETAIL_FAIL';\n\n\n","import { useEffect } from 'react'\nimport Product from '../components/Product'\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { ProductType } from '../types/ProductType';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts } from '../actions/Product';\n\nexport default function HomePage() {\n    const dispatch = useDispatch();\n    const proudctList = useSelector((state: any) => state.proudctList);\n    const { loading, error, products } = proudctList;\n\n    useEffect(() => {\n        dispatch(listProducts())\n    }, [dispatch]);\n\n    return (\n        <div>\n            {\n                loading ? (\n                    <div className=\"row center\">\n                        <LoadingBox></LoadingBox>\n                    </div>\n                ) :\n                    error ? (\n                        <MessageBox variant=\"danger\" >{error}</MessageBox>\n                    ) : (\n                        <div className=\"row center\">\n                            {\n                                products?.map((product: ProductType) => {\n                                    return (\n                                        <Product key={product._id} product={product} />\n                                    )\n                                })\n                            }\n                        </div>\n                    )\n\n            }\n\n        </div>\n    )\n}\n","import { productData, productDeail } from \"../api\";\nimport {\n    PRODUCT_DETAIL_FAIL,\n    PRODUCT_DETAIL_REQUEST,\n    PRODUCT_DETAIL_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS\n} from \"../constants/Product\"\n\nexport const listProducts = () => async (dispatch: any) => {\n    dispatch({\n        type: PRODUCT_LIST_REQUEST\n    });\n    try {\n        const { data } = await productData();\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n    }\n}\nexport const detailProduct = (productId: string) => async (dispatch: any) => {\n    dispatch({\n        type: PRODUCT_DETAIL_REQUEST\n    });\n    try {\n        const { data } = await productDeail(productId);\n        dispatch({ type: PRODUCT_DETAIL_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({ type: PRODUCT_DETAIL_FAIL, payload: error.response \n            && error.response.data.message ? \n               error.response.data.message : \n               error.message });\n    }\n}","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { detailProduct } from '../actions/Product';\nimport Rating from '../components/Rating';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { useHistory } from 'react-router-dom';\nimport { useState } from 'react';\n\ntype RouteInfo = {\n    id: string;\n};\n\nexport default function ProductPage({ match }: RouteComponentProps<RouteInfo>) {\n\n    const dispatch = useDispatch();\n    const { loading, error, product } = useSelector((state: any) => state.productDetail);\n    const [qty, setQty] = useState(1);\n    const history = useHistory();\n    useEffect(() => {\n\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(detailProduct(match.params.id));\n\n    }, [dispatch, match.params.id]);\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${product._id}?qty=${qty}`);\n    }\n    \n    return (\n        loading ? (\n            <LoadingBox></LoadingBox>) :\n            error ? (\n                <MessageBox variant=\"danger\" >{error}</MessageBox>\n            ) : (\n\n                <div>\n                    <Link to=\"/\">Back to Result</Link>\n                    <div className=\"row top\">\n                        <div className=\"col-2\">\n                            <img className=\"large\" src={process.env.PUBLIC_URL + product?.image} alt=\"\" />\n                        </div>\n                        <div className=\"col-1\">\n                            <ul>\n                                <li>\n                                    <h1>{product?.name}</h1>\n                                </li>\n                                <li>\n                                    <Rating rating={product.rating} numReviews={product.numReviews} />\n                                </li>\n                                <li>\n                                    Price : {product.price}\n                                </li>\n                                <li>\n                                    Description\n                            <p>{product.description}</p>\n                                </li>\n                            </ul>\n                        </div>\n                        <div className=\"col-1\">\n                            <div className=\"card card-body\">\n                                <ul>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div>Price</div>\n                                            <div className=\"price\">\n                                                ${product.price}\n                                            </div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div className=\"row\">\n                                            <div>Status</div>\n                                            <div >\n                                                {product.countInStock > 0 ?\n                                                    <span className=\"success\">\n                                                        In Stock\n                                        </span> :\n                                                    <span className=\"Error\">\n                                                        Unavailable\n                                            </span>\n                                                }\n\n                                            </div>\n                                        </div>\n                                    </li>\n                                    {\n                                        product.countInStock > 0 && (\n                                            <>\n                                                <li className=\"row\">\n                                                    <div>Qty</div>\n                                                    <div>\n                                                        <select value={qty} onChange={e => setQty(Number(e.target.value))}>\n                                                            {[...Array(product.countInStock).keys()].map((x) =>\n                                                                (<option key={x + 1} value={x + 1}>{x + 1}</option>))\n                                                            }\n                                                        </select>\n                                                    </div>\n                                                </li>\n                                                <li>\n                                                    <button className=\"primary\" onClick={addToCartHandler}>Add To Cart</button>\n                                                </li>\n                                            </>\n                                        )\n                                    }\n\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n    )\n}\n","import { useSelector } from \"react-redux\";\nimport {\n  Route,\n  Switch,\n  HashRouter,\n  Link\n} from \"react-router-dom\";\nimport CartPage from \"./views/CartPage\";\nimport HomePage from './views/HomePage';\nimport ProductPage from \"./views/ProductPage\";\nfunction App() {\n  const cart = useSelector((state: any) => state.cart);\n  const { cartItems } = cart;\n\n\n  return (\n    <HashRouter >\n      <div className=\"grid-container\">\n        <header className=\"row\">\n          <div>\n            <Link className=\"brand\" to=\"/\">Amazing Shop</Link>\n          </div>\n          <div>\n            <Link to=\"/cart\">Cart{cartItems.length > 0 && (\n              <span className=\"badge\">{cartItems.length}</span>\n            )}</Link>\n            <Link to=\"/signin\">Sign In</Link>\n          </div>\n        </header>\n        <main>\n          <Switch>\n            <Route path=\"/product/:id?\" component={ProductPage} >\n            </Route>\n            <Route path=\"/cart/:id\" component={CartPage} >\n            </Route>\n            <Route path=\"/\" component={HomePage}>\n            </Route>\n          </Switch>\n        </main>\n        <footer className=\"row center\">\n          All right reserved\n        </footer>\n      </div>\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, compose, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport { cartReducer } from './reducers/Cart';\nimport { productDetailReducer, productListReducer } from './reducers/Product'\n\nconst cartItems = localStorage.getItem('cartItems');\n\nlet tempCartItem = [];\nif (typeof cartItems === 'string') {\n    tempCartItem = JSON.parse(cartItems);\n}\n\nconst initialState: any = {\n    cart: {\n        cartItems: tempCartItem\n    }\n};\nexport interface ProductListState {\n    productList: {\n        loading: false,\n        error: string,\n        products: []\n    }\n}\nconst reducer = combineReducers({\n    proudctList: productListReducer,\n    productDetail: productDetailReducer,\n    cart: cartReducer\n});\ndeclare global {\n    interface Window {\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    }\n}\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\n// const store = createStore(reducer, initialState);\n\nexport default store;","import { PRODUCT_DETAIL_FAIL, PRODUCT_DETAIL_REQUEST, PRODUCT_DETAIL_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/Product\";\n\nexport const productListReducer = (state = { products: [], loading: true }, action: any) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true };\n        case PRODUCT_LIST_SUCCESS:\n\n            return { loading: false, products: action.payload };\n        case PRODUCT_LIST_FAIL:\n\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n}\n\nexport const productDetailReducer = (state = { product: {}, loading: true }, action: any) => {\n    switch (action.type) {\n        case PRODUCT_DETAIL_REQUEST:\n            return { loading: true };\n        case PRODUCT_DETAIL_SUCCESS:\n            return { loading: false, product: action.payload };\n        case PRODUCT_DETAIL_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n}","import { CART_ADD_ITEM } from \"../constants/Cart\";\n\nexport const cartReducer = (state = { cartItems: [] }, action: any) => {\n\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload;\n            const existItem: any = state.cartItems.find((x: any) => x.productId === item.productId);\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map((x: any) => x.productId === existItem.productId ? item : x)\n                }\n            } else {\n                return { ...state, cartItems: [...state.cartItems, item] }\n            }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}